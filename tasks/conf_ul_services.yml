---

# - name: CONF_UL | copy conf-available templates
#   template:
#     src: "{{ item }}"
#     dest: "{{ monit_path }}conf-available/templates/{{ item | basename | regex_replace('.j2','')}}"
#     mode: 0644
#     owner: root
#     group: root
#   with_fileglob:
#     - ../templates/conf-available/*.*

- name: CONF_UL | service-scan all running services on the OS
  shell: service --status-all | awk '/\+/ {print $4}'
  register: service_services

- name: CONF_UL | scan conf-available 
  shell: ls /etc/monit/conf-available/templates/
  register: conf_available

- name: CONF_UL | systemctl-scan all running services on the OS 
  shell: systemctl --type=service --state=running list-units | awk '/.service/ {gsub(".service","",$1); print $1}'
  register: systemctl_services

# # SEMI-AUTO - SEMI-AUTO - SEMI-AUTO - SEMI-AUTO - SEMI-AUTO

# - name: CONF_UL | enable services with templates when user list is defined
#   file:
#     src: "{{ monit_path }}conf-available/templates/{{ item }}"
#     dest: "{{ monit_path }}conf-enabled/{{ item }}"
#     state: link
#     owner: root
#     group: root
#   with_items:
#     - "{{ service_services.stdout_lines | union( systemctl_services.stdout_lines ) | unique | intersect( monit_process | sort | intersect( conf_available.stdout_lines )) | difference( monit_banned ) }}"
#   when: not monit_auto

# - name: CONF_UL |  create BASIC config templates 
#   blockinfile:
#     path: "{{ monit_path }}conf-available/basic/{{ item }}"
#     marker: "## <-- {mark} ANSIBLE MANAGED BLOCK -->"
#     block: |
#        check process {{ item }}
#           matching "{{ item }}"
#           start program  = "/etc/init.d/{{ item }} start"
#           stop program  = "/etc/init.d/{{ item }} stop"
#     state: present
#     create: yes
#   with_items:
#     - "{{ service_services.stdout_lines | intersect( monit_process | sort | difference( conf_available.stdout_lines )) }}"
#   when: not monit_auto

# - name: CONF_UL | enable BASIC config templates
#   file:
#     src: "{{ monit_path }}conf-available/basic/{{ item }}"
#     dest: "{{ monit_path }}conf-enabled/{{ item }}"
#     state: link
#     owner: root
#     group: root
#   with_items:
#     - "{{ service_services.stdout_lines | intersect( monit_process | sort | difference( conf_available.stdout_lines )) }}"
#   when: not monit_auto

#  AUTO - AUTO - AUTO - AUTO - AUTO - AUTO - AUTO - AUTO

# - name: running service
#   debug: msg="{{ service_services.stdout_lines }}"

- name: running systemctl
  debug: msg="{{ systemctl_services.stdout_lines }}"

# - name: list by user
#   debug: msg="{{ monit_process }}"

# - name: banned list
#   debug: msg="{{ monit_banned }}"

- name: running systctl&service
  debug: msg="{{ service_services.stdout_lines | union( systemctl_services.stdout_lines ) | unique }}"

# - name: available templates
#   debug: msg="{{ conf_available.stdout_lines }}"

# - name: running AUTO template
#   debug: msg="{{ service_services.stdout_lines | union( systemctl_services.stdout_lines ) | unique | intersect( conf_available.stdout_lines ) | difference( monit_banned ) }}"
#   when: monit_auto

# - name: running AUTO basic
#   debug: msg="{{ service_services.stdout_lines | union( systemctl_services.stdout_lines ) | unique | difference( conf_available.stdout_lines ) | difference( monit_banned ) }}"
#   when: monit_auto

# - name: running SEMI-AUTO templates
#   debug: msg="{{ service_services.stdout_lines | union( systemctl_services.stdout_lines ) | unique | intersect( monit_process | sort | intersect( conf_available.stdout_lines )) | difference( monit_banned ) }}"
#   when: not monit_auto

# - name: running SEMI-AUTO basic
#   debug: msg="{{ service_services.stdout_lines | union( systemctl_services.stdout_lines ) | unique | intersect( monit_process | sort | difference( conf_available.stdout_lines )) | difference( monit_banned ) }}"
#   when: not monit_auto

- name: systemctl
  systemd: state=started name=nginx

# - name: service service
#   service:
#     name: mongod
#     state: started

# - name: CONF_AU | enable auto list process with templates
#   file:
#     src: "{{ monit_path }}conf-available/templates/{{ item }}"
#     dest: "{{ monit_path }}conf-enabled/{{ item }}"
#     state: link
#     owner: root
#     group: root
#   with_items:
#     - "{{ service_services.stdout_lines | union( systemctl_services.stdout_lines ) | unique | intersect( conf_available.stdout_lines ) | difference( monit_banned ) }}"
#   when: monit_auto

# - name: CONF_AU |  create basic auto templates for process not in conf-available
#   blockinfile:
#     path: "{{ monit_path }}conf-available/basic/{{ item }}"
#     marker: "## <-- {mark} ANSIBLE MANAGED BLOCK -->"
#     block: |
#        check process {{ item }}
#           matching "{{ item }}"
#           start program  = "/etc/init.d/{{ item }} start"
#           stop program  = "/etc/init.d/{{ item }} stop"
#     state: present
#     create: yes
#   with_items:
#     - "{{ service_services.stdout_lines | difference( conf_available.stdout_lines ) }}"
#   when: monit_auto

# - name: CONF_AU | enable auto basic list process 
#   file:
#     src: "{{ monit_path }}conf-available/basic/{{ item }}"
#     dest: "{{ monit_path }}conf-enabled/{{ item }}"
#     state: link
#     owner: root
#     group: root
#   with_items:
#     - "{{ service_services.stdout_lines | difference( conf_available.stdout_lines ) }}"
#   when: monit_auto

# - name: reload monit
#   command: "monit reload"
#   become: yes